How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    when I use diff, I can see only the changes that made. If I don`t use diff, I will have to open the files and search untill find changes

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Fill in your answer here

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Fill in your answer here

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Fill in your answer here

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

    Fill in your answer here

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

	Fill in your answer here

How can you use the commands git log and git diff to view the history of files?

I can use commands git log to see all commits made ad after using git diff I can choose two commits and compare the changes


Now that you know how to return to a previous version of your files using Git, go add the following question and your thoughts on it to your reflections file:

How might using version control make you more confident to make changes that could break something?

When you've updated your document, click "Next" to start configuring a workspace that will make you more efficient at using Git.



Go add the following question and your thoughts on it to your reflections file:

Now that you have your workspace set up, what do you want to try using Git for?

When you've updated your document, click "Next" and we'll wrap up the lesson.


———
What happens when you initialize a repository? Why do you need to do it?

How is the staging area different from the working directory and the repository?
What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?


______

What happens when you initialize a repository? Why do you need to do it?

How is the staging area different from the working directory and the repository?
What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
